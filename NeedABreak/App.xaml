<!--NEED A BREAK is an application intended to help you take care of your health while you work on a computer. 
 It will encourage you to regularly have a break in order to rest your back and your eyes.
    Copyright (C) 2020  Benoit Rocco

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.-->
<Application x:Class="NeedABreak.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:NeedABreak"
			 xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
			 xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
				<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
				<!-- Accent and AppTheme setting -->
				<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Green.xaml" />
			</ResourceDictionary.MergedDictionaries>  			

			<Style TargetType="{x:Type Button}"
				   BasedOn="{StaticResource {x:Type Button}}">
				<Setter Property="Background"
						Value="#00B67C" />
				<Setter Property="BorderThickness"
						Value="0" />
				<Setter Property="FontSize"
						Value="{DynamicResource FlatButtonFontSize}" />
				<Setter Property="Foreground"
						Value="White" />
				<Setter Property="Padding"
						Value="10 5 10 5" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Border x:Name="Border"
									Margin="0"
									Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									CornerRadius="10">
								<Controls:ContentControlEx x:Name="PART_ContentPresenter"
														   Padding="{TemplateBinding Padding}"
														   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
														   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
														   Content="{TemplateBinding Content}"
														   ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.ContentCharacterCasing)}"
														   ContentStringFormat="{TemplateBinding ContentStringFormat}"
														   ContentTemplate="{TemplateBinding ContentTemplate}"
														   ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
														   RecognizesAccessKey="True"
														   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
														   />
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger Property="IsMouseOver"
							 Value="True">
						<Setter Property="Background"
								Value="#FFB67C" />
					</Trigger>
					<Trigger Property="IsPressed"
							 Value="True">
						<Setter Property="Background"
								Value="#007A76" />
						<Setter Property="Foreground"
								Value="White" />
					</Trigger>
					<Trigger Property="IsEnabled"
							 Value="False">
						<Setter Property="Foreground"
								Value="{DynamicResource GrayBrush2}" />
					</Trigger>
				</Style.Triggers>
			</Style>
		</ResourceDictionary>
    </Application.Resources>
</Application>
